// This file was generated by PermissionsDispatcher. Do not modify!
package com.work.doctor.fruits.activity.fragment;

import androidx.annotation.NonNull;
import java.lang.String;
import permissions.dispatcher.PermissionUtils;

final class MainOneFragmentPermissionsDispatcher {
  private static final int REQUEST_GETPREMISSION_CALL_PHONE = 5;

  private static final String[] PERMISSION_GETPREMISSION_CALL_PHONE = new String[] {"android.permission.CALL_PHONE"};

  private static final int REQUEST_GETPREMISSION_LOCATION = 6;

  private static final String[] PERMISSION_GETPREMISSION_LOCATION = new String[] {"android.permission.ACCESS_COARSE_LOCATION","android.permission.ACCESS_FINE_LOCATION"};

  private MainOneFragmentPermissionsDispatcher() {
  }

  static void getPremission_call_phoneWithPermissionCheck(@NonNull MainOneFragment target) {
    if (PermissionUtils.hasSelfPermissions(target.requireActivity(), PERMISSION_GETPREMISSION_CALL_PHONE)) {
      target.getPremission_call_phone();
    } else {
      target.requestPermissions(PERMISSION_GETPREMISSION_CALL_PHONE, REQUEST_GETPREMISSION_CALL_PHONE);
    }
  }

  static void getPremission_locationWithPermissionCheck(@NonNull MainOneFragment target) {
    if (PermissionUtils.hasSelfPermissions(target.requireActivity(), PERMISSION_GETPREMISSION_LOCATION)) {
      target.getPremission_location();
    } else {
      target.requestPermissions(PERMISSION_GETPREMISSION_LOCATION, REQUEST_GETPREMISSION_LOCATION);
    }
  }

  static void onRequestPermissionsResult(@NonNull MainOneFragment target, int requestCode,
      int[] grantResults) {
    switch (requestCode) {
      case REQUEST_GETPREMISSION_CALL_PHONE:
      if (PermissionUtils.verifyPermissions(grantResults)) {
        target.getPremission_call_phone();
      }
      break;
      case REQUEST_GETPREMISSION_LOCATION:
      if (PermissionUtils.verifyPermissions(grantResults)) {
        target.getPremission_location();
      }
      break;
      default:
      break;
    }
  }
}
