package com.work.doctor.fruits.activity.adapter;

import android.view.View;

import androidx.annotation.Nullable;

import com.chad.library.adapter.base.BaseViewHolder;
import com.t.databaselib.BigDecimalUtil;
import com.t.databaselib.DatabaseGoodsInfo;
import com.trjx.tbase.module.recyclermodule.TRecyclerAdapter;
import com.trjx.tlibs.uils.GlideUtile;
import com.work.doctor.fruits.R;

import java.util.List;

public class ShopCartAdapter extends TRecyclerAdapter<DatabaseGoodsInfo> {

    public ShopCartAdapter(@Nullable List<DatabaseGoodsInfo> data) {
        super(data);
    }

    @Override
    protected void convert(BaseViewHolder helper, DatabaseGoodsInfo item) {

        helper.addOnClickListener(R.id.item_shopcart_select, R.id.item_shopcart_add, R.id.item_shopcart_minus);

        helper.setText(R.id.item_shopcart_name, item.getGoodsName());
        helper.setText(R.id.item_shopcart_guige, item.getSpecName());
        helper.setText(R.id.item_shopcart_num, item.getGoodsNumber() + "");
        helper.setText(R.id.item_shopcart_price, "￥" + BigDecimalUtil.roundOffString(item.getGoodsPrice(), 2));

        if (item.getGoodsTotal() <= item.getGoodsNumber()) {
            helper.getView(R.id.item_shopcart_remind).setVisibility(View.VISIBLE);

            String str = "";
            if (item.getIsTemai() == 0) {
                //特卖商品
                if(item.getSpecialSale()==1){
                    str = "此商品为限购商品，已购买";
                }else{
                    str = "此商品限购1件";
                }
            }else{
//                普通商品
                if(item.getGoodsTotal()==0){
                    str = "此商品暂无库存";
                }else{
                    str = "当前库存仅剩 " + item.getGoodsTotal() + " 个";
                }
            }

            helper.setText(R.id.item_shopcart_remind, str);
            helper.getView(R.id.item_shopcart_add).setEnabled(false);
            GlideUtile.bindImageView(mContext,R.mipmap.goodscart_jia_default,helper.getView(R.id.item_shopcart_add));
        }else{
            helper.getView(R.id.item_shopcart_remind).setVisibility(View.GONE);
            helper.getView(R.id.item_shopcart_add).setEnabled(true);
            GlideUtile.bindImageView(mContext,R.mipmap.goodscart_jia,helper.getView(R.id.item_shopcart_add));
        }
        if (item.getGoodsNumber() > 1) {
            helper.getView(R.id.item_shopcart_minus).setEnabled(true);
            GlideUtile.bindImageView(mContext,R.mipmap.goodscart_jian,helper.getView(R.id.item_shopcart_minus));
        }else{
            helper.getView(R.id.item_shopcart_minus).setEnabled(false);
            GlideUtile.bindImageView(mContext,R.mipmap.goodscart_jian_default,helper.getView(R.id.item_shopcart_minus));
        }

        GlideUtile.bindImageView(mContext, item.getGoodsUrl(), helper.getView(R.id.item_shopcart_icon));

        boolean select = item.getIsSelect();
        if (select) {
            GlideUtile.bindImageView(mContext, R.mipmap.goodscart_select, helper.getView(R.id.item_shopcart_select));
        } else {
            GlideUtile.bindImageView(mContext, R.mipmap.round_n, helper.getView(R.id.item_shopcart_select));
        }

        if (item.getIsTemai() == 0) {
            helper.getView(R.id.item_shopcart_tm).setVisibility(View.VISIBLE);
        }else{
            helper.getView(R.id.item_shopcart_tm).setVisibility(View.GONE);
        }



    }

    @Override
    protected int addItemLayoutRes() {
        return R.layout.item_shopcart;
    }
}
