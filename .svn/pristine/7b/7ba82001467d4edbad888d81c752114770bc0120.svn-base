package com.work.doctor.fruits.activity.order;

import android.content.Intent;
import android.view.View;

import androidx.annotation.Nullable;

import com.chad.library.adapter.base.BaseQuickAdapter;
import com.t.httplib.yigou.bean.WechetPayInfo;
import com.t.httplib.yigou.bean.resp.OrderListInfoBean;
import com.trjx.tbase.tdialog.BaseDialog;
import com.trjx.tbase.tdialog.TSelectBottomDialog;
import com.work.doctor.fruits.R;
import com.work.doctor.fruits.dialog.RemindDialog;
import com.work.doctor.fruits.wxapi.WXPayEntryActivity;

public class OrderAllFragment extends OrderInitFragment<OrderListAllAdapter> implements BaseDialog.OnTdSelectListener {

    public OrderAllFragment(int tabStatus) {
        super(tabStatus);
    }

    @Override
    protected OrderListAllAdapter initAdapter() {
//         0：待支付；1：待发货；2：待收货；3：待评价；4：已完成；5：已取消；6：退款中；7：已退款；
        return new OrderListAllAdapter(this, null);
    }


    private String systemOrderNo = "";

    private int zfIndex = -1;

    @Override
    public void onItemChildClick(BaseQuickAdapter adapter, View view, int position) {
//        ToastUtil2.showToast(activity.context,"点击了");
        int ids = view.getId();
        OrderListInfoBean infoBean = (OrderListInfoBean) adapter.getData().get(position);
        int status = infoBean.getTradeStatus();
        if (status == 0) {
            if (ids == R.id.item_orderlist_btnleft) {

                RemindDialog remindDialog = new RemindDialog.Builder(activity.context)
                        .setMessage("确定要取消订单吗？")
                        .setCancleText("考虑一下")
                        .setAffirmText("确定")
                        .setOnRemindClickListener(new RemindDialog.OnRemindClickListener() {
                            @Override
                            public void onRemindClickAffirm(View view) {
                                //取消订单
                                getPresenter().getDataOrderCancel(infoBean.getSystemOrderNo(), position);
                            }

                            @Override
                            public void onRemindClickCancle(View view) {

                            }
                        }).create();
                remindDialog.show(activity.getSupportFragmentManager(), "dialog_order_cancle");

            } else if (ids == R.id.item_orderlist_btnright) {
                //付款
                systemOrderNo = infoBean.getSystemOrderNo();
                zfIndex = position;
                TSelectBottomDialog bottomDialog = new TSelectBottomDialog.Builder(activity.context)
                        .setCancelable(false)
                        .setText("微信支付")
                        .setText("余额支付")
                        .setOnTdSelect(this)
                        .create();
                bottomDialog.show(getFragmentManager(), "dialog_zhi_fu_fang_shi");
            }

        } else if (status == 1) {
//            if(ids == R.id.item_orderlist_btnleft){
////                提醒发货
//
//            }else if(ids == R.id.item_orderlist_btnright){
//                //申请退款
//            }

        } else if (status == 2) {
            if (ids == R.id.item_orderlist_btnleft) {
                //查看物流
                Intent intent = new Intent(activity.context, DdDeliveryDetailActivity.class);
                intent.putExtra("orderno", infoBean.getSystemOrderNo());
                activity.skipActivity(intent);
            } else if (ids == R.id.item_orderlist_btnright) {
                //确认收货
                getPresenter().getDataOrderReceive(infoBean.getSystemOrderNo(), position);
            }
        } else if (status == 3) {
            if (ids == R.id.item_orderlist_btnright) {
                //去评价
                //上下文必须传当太难Fragment的上下文，不然不能触发onActivityResult回调方法
                Intent intent = new Intent(this.getContext(), OrderCommentActivity.class);
                intent.putExtra("comment", infoBean);
                startActivityForResult(intent, 101);

            }

        } else if (status == 4) {
            //已完成
        } else if (status == 5) {
            //已取消
            if (ids == R.id.item_orderlist_btnright) {
                RemindDialog remindDialog = new RemindDialog.Builder(activity.context)
                        .setMessage("确定要删除这条地址吗？")
                        .setCancleText("考虑一下")
                        .setAffirmText("确定")
                        .setOnRemindClickListener(new RemindDialog.OnRemindClickListener() {
                            @Override
                            public void onRemindClickAffirm(View view) {
                                //删除订单
                                getPresenter().getDataOrderDelete(infoBean.getSystemOrderNo(), position);
                            }

                            @Override
                            public void onRemindClickCancle(View view) {

                            }
                        }).create();
                remindDialog.show(activity.getSupportFragmentManager(), "dialog_order_delete");
            }
        } else {
            //全部
        }
    }

    @Override
    public void onItemClick(BaseQuickAdapter adapter, View view, int position) {
        OrderListInfoBean infoBean = (OrderListInfoBean) adapter.getData().get(position);
        skipOrderDetailPage(infoBean);
    }


    protected void skipOrderDetailPage(OrderListInfoBean infoBean) {
        String orderNo = infoBean.getSystemOrderNo();
        Intent intent = new Intent(activity.context, OrderDetailActivity.class);
        intent.putExtra("orderNo", orderNo);
        activity.skipActivity(intent);
    }

    @Override
    public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if (requestCode == 101 && resultCode == 200) {
            recyclerModule.setPage(1);
            getRecyclerListData();
        }
    }

    //    @Override
//    public void onActivityResult(int requestCode, int resultCode, Intent data) {
//        super.onActivityResult(requestCode, resultCode, data);
//        if(requestCode == 101){
//            recyclerModule.setPage(1);
//            getRecyclerListData();
//        }
//    }


    private int payType = -1;

    @Override
    public void onTdSelect(int position) {
        if (position == 0) {
            //微信
            payType = 2;
            getPresenter().payMent(systemOrderNo, payType, zfIndex);
        } else if (position == 1) {
            //余额
            payType = 4;
            getPresenter().payMent(systemOrderNo, payType, zfIndex);
        }
    }

    @Override
    public void getPayMentSuccess(WechetPayInfo infoBean, int position) {
        super.getPayMentSuccess(infoBean, position);
        if (payType == 4) {
            tRemind("支付成功");
            adapter.remove(position);
            Intent intent = new Intent(activity.context, WXPayEntryActivity.class);
            intent.putExtra("code", 1);//成功
            activity.skipActivity(intent);
        } else if (payType == 2) {
            //微信支付
            getPresenter().getWxPayInfo(activity.context, infoBean);
        }

    }
}
