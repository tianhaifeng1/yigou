package com.t.databaselib;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.t.databaselib.DatabaseCityInfo;
import com.t.databaselib.DatabaseGoodsInfo;
import com.t.databaselib.DatabaseShopInfo;
import com.t.databaselib.GoodsInfo;
import com.t.databaselib.DatabaseSearchGoodsInfo;

import com.t.databaselib.DatabaseCityInfoDao;
import com.t.databaselib.DatabaseGoodsInfoDao;
import com.t.databaselib.DatabaseShopInfoDao;
import com.t.databaselib.GoodsInfoDao;
import com.t.databaselib.DatabaseSearchGoodsInfoDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig databaseCityInfoDaoConfig;
    private final DaoConfig databaseGoodsInfoDaoConfig;
    private final DaoConfig databaseShopInfoDaoConfig;
    private final DaoConfig goodsInfoDaoConfig;
    private final DaoConfig databaseSearchGoodsInfoDaoConfig;

    private final DatabaseCityInfoDao databaseCityInfoDao;
    private final DatabaseGoodsInfoDao databaseGoodsInfoDao;
    private final DatabaseShopInfoDao databaseShopInfoDao;
    private final GoodsInfoDao goodsInfoDao;
    private final DatabaseSearchGoodsInfoDao databaseSearchGoodsInfoDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        databaseCityInfoDaoConfig = daoConfigMap.get(DatabaseCityInfoDao.class).clone();
        databaseCityInfoDaoConfig.initIdentityScope(type);

        databaseGoodsInfoDaoConfig = daoConfigMap.get(DatabaseGoodsInfoDao.class).clone();
        databaseGoodsInfoDaoConfig.initIdentityScope(type);

        databaseShopInfoDaoConfig = daoConfigMap.get(DatabaseShopInfoDao.class).clone();
        databaseShopInfoDaoConfig.initIdentityScope(type);

        goodsInfoDaoConfig = daoConfigMap.get(GoodsInfoDao.class).clone();
        goodsInfoDaoConfig.initIdentityScope(type);

        databaseSearchGoodsInfoDaoConfig = daoConfigMap.get(DatabaseSearchGoodsInfoDao.class).clone();
        databaseSearchGoodsInfoDaoConfig.initIdentityScope(type);

        databaseCityInfoDao = new DatabaseCityInfoDao(databaseCityInfoDaoConfig, this);
        databaseGoodsInfoDao = new DatabaseGoodsInfoDao(databaseGoodsInfoDaoConfig, this);
        databaseShopInfoDao = new DatabaseShopInfoDao(databaseShopInfoDaoConfig, this);
        goodsInfoDao = new GoodsInfoDao(goodsInfoDaoConfig, this);
        databaseSearchGoodsInfoDao = new DatabaseSearchGoodsInfoDao(databaseSearchGoodsInfoDaoConfig, this);

        registerDao(DatabaseCityInfo.class, databaseCityInfoDao);
        registerDao(DatabaseGoodsInfo.class, databaseGoodsInfoDao);
        registerDao(DatabaseShopInfo.class, databaseShopInfoDao);
        registerDao(GoodsInfo.class, goodsInfoDao);
        registerDao(DatabaseSearchGoodsInfo.class, databaseSearchGoodsInfoDao);
    }
    
    public void clear() {
        databaseCityInfoDaoConfig.clearIdentityScope();
        databaseGoodsInfoDaoConfig.clearIdentityScope();
        databaseShopInfoDaoConfig.clearIdentityScope();
        goodsInfoDaoConfig.clearIdentityScope();
        databaseSearchGoodsInfoDaoConfig.clearIdentityScope();
    }

    public DatabaseCityInfoDao getDatabaseCityInfoDao() {
        return databaseCityInfoDao;
    }

    public DatabaseGoodsInfoDao getDatabaseGoodsInfoDao() {
        return databaseGoodsInfoDao;
    }

    public DatabaseShopInfoDao getDatabaseShopInfoDao() {
        return databaseShopInfoDao;
    }

    public GoodsInfoDao getGoodsInfoDao() {
        return goodsInfoDao;
    }

    public DatabaseSearchGoodsInfoDao getDatabaseSearchGoodsInfoDao() {
        return databaseSearchGoodsInfoDao;
    }

}
